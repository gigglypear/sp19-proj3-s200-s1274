Q: Can you think of an analogy between the process of tesselating hexagons and randomly generating a world using rooms and hallways? 
What is the hexagon and what is the tesselation on the Project 3 side?

A: Hexagons are the rooms and the gaps in between rooms are the hallways.

-----
Q: If you were to start working on world generation, what kind of method would you think of writing first? 
Think back to the lab and the process used to eventually get to tesselating hexagons.

A: I would think of writing general methods of writing different shapes (random shapes, hexagons, rectangles,
   triangles, etc.) Then I would write helper methods to help generate those shapes. Then I would write a method
   to allocate the hexagons generated

-----
Q: What distinguishes a hallway from a room? How are they similar?

A: Both are spaces to be explored and are surrounded by walls. Hallways have an entrances and an exit (implied).
   Rooms can have from one to multiple doors (entrance/exits)

-----
Q: For tesselating hexagons, one of the hardest parts is figuring out where to place each hexagon/how to easily place hexagons on screen in an algorithmic way. 
After looking at your own implemention, consider the implementation provided near the end of the lab. 
How did your implementation differ from the given one? What lessons can be learned from it?

A: My implementation was trying to figure out the perfect way that aligns many hexagon of different sizes and of course
   that is too complicated. The given implementation was one step at a time, and generate one row of hexagon at a time.
   Lessons can be learned that we should start with a method that can do limited things then expand from there.

-----
Q: Consider an algorithm for placing rooms and hallways on your map. 
Ideally, consider many algorithms and think about what makes some easier or harder to implement. Try and bring those ideas together into a single simple algorithm which accomplishes the task. 
In general, algorithms with as few edge cases as possible are better algorithms.

A: Our definition of rooms and hallways are, whatever space in between rooms are satisfied as hallways and need to be
   at least 2 tiles wide. Some difficult edge cases can be that if distances between rooms are less than two tiles, or
   if index of rooms go out of bound etc.
